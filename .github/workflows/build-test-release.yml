name: build-test-release

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, raspbian-latest]
        arch: [x86, x64, arm]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Update
        run: sudo apt-get update

      - name: Install dependencies
        run: sudo apt-get install -y libudev-dev
      
      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.arch }}-unknown-linux-gnu
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.arch }}-unknown-linux-gnu/release/xcontroller
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Update
        run: sudo apt-get update

      - name: Install dependencies
        run: sudo apt-get install -y libudev-dev
      
      - name: Run tests
        run: cargo test --verbose

  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-ubuntu-latest-x64
          path: target/x64-unknown-linux-gnu/release
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x64-unknown-linux-gnu/release/xcontroller
          asset_name: xcontroller
          asset_content_type: application/octet-stream